[
	{
		"queries": [
			"Ne(SrcIpAddr, 1)"
		],
		"description": "If a multi- or broadcast IP address appears in the flow, it must be the destination IP address."
	},
	{
		"queries": [
			"Ne(DstIpAddr, 2)"
		],
		"description": "The any-IP binding can only be src IP."
	},
	{
		"queries": [
			"Equivalent(Eq(Proto, 0), Eq(Flags, 1))"
		],
		"description": "If the flow has flags, then the Protocol is TCP (IFF)"
	},
	{
		"queries": [
			"Eq(SrcPt, 80) >> Eq(Proto, 0)",
			"Eq(SrcPt, 443) >> Eq(Proto, 0)",
			"Eq(SrcPt, 8080) >> Eq(Proto, 0)"
		],
		"description": "If one of the ports is either 80, 443 or 8080, then the Protocol is TCP."
	},
	{
		"queries": [
			"Eq(SrcPt, 53) >> Eq(DstIpAddr, 0)"
		],
		"description": "If source port is 53, then the destination IP is private."
	},
	{
		"queries": [
			"Equivalent(Eq(SrcPt, 53), Eq(SrcIpAddr, 4))"
		],
		"description": "If the source port is 53, then the source IP is DNS (IFF)."
	},
	{
		"queries": [
			"Eq(DstPt, 53) >> Eq(DstIpAddr, 4)"
		],
		"description": "If the destination port is 53, then the destination IP is DNS."
	},
	{
		"queries": [
			"Eq(DstIpAddr, 4) >> (Eq(DstPt, 53) | Eq(DstPt, 3))"
		],
		"description": "If the destination IP is DNS, then the destination port is either 53 or 3 (=>)."
	},
	{
		"queries": [
			"Eq(DstIpAddr, 3) >> Ne(SrcPt, 80)",
			"Eq(DstIpAddr, 3) >> Ne(SrcPt, 443)",
			"Eq(DstIpAddr, 3) >> Ne(SrcPt, 8080)"
		],
		"description": "If Destination IP Address is public, then Source Port is not 80/443/8080."
	},
	{
		"queries": [
			"42*Packets <= Bytes",
			"65535*Packets >= Bytes"
		],
		"description": "All packets have a minimum and maximum packet size."
	},
	{
		"queries": [
			"Eq(SrcIpAddr, 3) >> ~(Eq(SrcPt, 137) | Eq(SrcPt, 138))"
		],
		"description": "If source IP Address is public, then source port is neither 137 nor 138."
	},
	{
		"queries": [
			"Eq(DstIpAddr, 3) >> ~(Eq(DstPt, 137) | Eq(DstPt, 138))"
		],
		"description": "If destination IP Address is public, then destination port is neither 137 nor 138."
	},
	{
		"queries": [
			"Eq(SrcIpAddr, 3) >> (Eq(DstIpAddr, 0) | Eq(DstIpAddr, 1))",
			"Eq(SrcIpAddr, 4) >> (Eq(DstIpAddr, 0) | Eq(DstIpAddr, 1))",
			"Eq(DstIpAddr, 3) >> (Eq(SrcIpAddr, 0) | Eq(SrcIpAddr, 2))",
			"Eq(DstIpAddr, 4) >> (Eq(SrcIpAddr, 0) | Eq(SrcIpAddr, 2))"
		],
		"description": "The CIDDS-001 dataset is captured within an emulated company network. Therefore, at least one IP address (source IP address  or destination IP address) of each flow must be internal (starting with 192.168.XXX.XXX or broadcast)."
	},
	{
		"queries": [
			"Eq(DstPt, 137) >> (Eq(DstIpAddr, 1) & Eq(SrcIpAddr, 0))",
			"Eq(DstPt, 138) >> (Eq(DstIpAddr, 1) & Eq(SrcIpAddr, 0))",
			"Or(Eq(DstPt, 137), Eq(DstPt, 138)) >> Eq(DstIpAddr, 1)",
			"Or(Eq(DstPt, 137), Eq(DstPt, 138)) >> Eq(SrcIpAddr, 0)"
		],
		"description": "If the flow represents a NetBIOS message (destination port is 137 or 138), the source IP addresses must be internal (192.168.XXX.XXX) and the destination IP address must be an internal broadcast (192.168.XXX.255)."
	},
	{
		"queries": [
			"Eq(Proto, 2) >> (64*Packets <= Bytes)",
			"Eq(Proto, 2) >> (65535*Packets >= Bytes)"
		],
		"description": "ICMP packets have different packet size limits."
	},
	{
		"queries": [
			"Eq(Proto, 2) >> Eq(SrcPt, 0)"
		],
		"description": "When ICMP is used, the source port is recorded as 0."
	}
]